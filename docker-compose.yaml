
services:

  postgresql:
    container_name: postgresql
    build: 
      context: srcs/postgreSQL
      args:
        - DB_NAME=${DB_NAME}
        - DB_USER=${DB_USER}
        - DB_PASS=${DB_PASS}
    healthcheck:
      test: [ "CMD", "sudo", "-u", "postgres", "psql"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    env_file:
      - .env
#    volumes:
#      - database:/usr/local/pgsql/data
    networks:
      - my_network


  django:
    container_name: django
    build: srcs/django
    env_file:
      - .env
    ports:
      - "${PORT}:80"
    # volumes:
      # - transcendence:/django/mysite/
    networks:
      - my_network
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    container_name: redis
    build: srcs/redis
    ports:
      - "6379:6379"
    networks:
      - my_network

# volumes:

#   transcendence:
#     driver: local
#     driver_opts:
#       type: none
#       device: ${DJANGO_VOLUME_PATH}
#       o: bind
  
#  database:
#    driver: local
#    driver_opts:
#      type: none
#      device: ${POSTGRESQL_VOLUME_PATH}
#      o: bind

networks:
  my_network:
    driver: bridge